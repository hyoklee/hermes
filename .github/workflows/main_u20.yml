name: u20.04 ci
on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
env:
  BUILD_TYPE: Debug
  LOCAL: local

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Get Sources
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v1

      - name: Run cpplint
        run: pip install cpplint==1.5.4 && bash ci/lint.sh `pwd`

      - name: Install APT Dependencies
        run: |
          sudo apt update
          sudo apt-get install -y autoconf
          sudo apt-get install -y automake
          sudo apt-get install -y cmake          
          sudo apt-get install -y lcov          
          sudo apt-get install -y mpich
          sudo apt-get install -y libsdl2-dev
          sudo apt-get install -y diffutils
          sudo apt-get install -y libdb-dev
          sudo apt-get install -y libedit-dev
          sudo apt-get install -y libncurses6
          sudo apt-get install -y libsigsegv-dev
          sudo apt-get install -y libtool
          sudo apt-get install -y libtool-bin
          sudo apt-get install -y libxml2-dev
          sudo apt-get install -y openssl
          sudo apt-get install -y xz-utils
          sudo apt-get install -y zlib1g-dev          

      - name: Build And Install Dependencies
        run: ci/install_deps.sh

      - name: Build and Test
        run: ci/install_hermes.sh

      - name: Install
        run: pushd build && make install && popd

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && (failure() || !failure()) }}

      - name: Multi-node Test
        run: pushd ci/cluster && ./multi_node_ci_test.sh

      - name: Generate coverage file
        run: |
          COVERAGE_DIR=${GITHUB_WORKSPACE}/coverage
          mkdir -p ${COVERAGE_DIR}
          pushd ${GITHUB_WORKSPACE}/build
          lcov -c -d . -o "${COVERAGE_DIR}/tmp.info"
          lcov --remove "${COVERAGE_DIR}/tmp.info"   \
                        "/usr/include/*"             \
                        "${HOME}/${LOCAL}/*"         \
                        "*/stb_ds.h"                 \
                        -o ${COVERAGE_DIR}/lcov.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
